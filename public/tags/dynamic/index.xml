<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dynamic on A Blog</title>
    <link>http://localhost:1313/tags/dynamic/</link>
    <description>Recent content in Dynamic on A Blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Thu, 23 Mar 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/dynamic/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>NET Dynamically Generating Classes in Runtime</title>
      <link>http://localhost:1313/posts/net-dynamically-generating-classes-in-runtime/</link>
      <pubDate>Thu, 23 Mar 2017 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/net-dynamically-generating-classes-in-runtime/</guid>
      <description>&lt;p&gt;Reflection API in .NET is one of the most powerful and incredible features of it. And along with &lt;a href=&#34;https://en.wikipedia.org/wiki/Dynamic_Language_Runtime&#34;&gt;DLR&lt;/a&gt; it enables a whole new look at what can be done in .NET languages.&lt;br&gt;&#xA;One of problems i had to solve recently was how to create a unified &lt;a href=&#34;https://en.wikipedia.org/wiki/Domain-specific_language&#34;&gt;DSL&lt;/a&gt; for queries that could be used with most C# DB drivers(they had to have &lt;a href=&#34;https://msdn.microsoft.com/en-us/library/system.linq.iqueryable(v=vs.110).aspx&#34;&gt;IQueryable&lt;/a&gt; support).&lt;br&gt;&#xA;It turned out to be simpler job than i thought. This &lt;a href=&#34;https://github.com/kahanu/System.Linq.Dynamic&#34;&gt;github project&lt;/a&gt; helped me a lot to figure out how to solve it. One of the problems was how to execute &lt;em&gt;projections&lt;/em&gt; from dbs and be able to get the information in runtime.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
